name: Build & Deploy
on:
  push:
    branches: [ "main", "staging" ]
permissions:
  contents: read
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      REGION: us-central1
    steps:
      - uses: actions/checkout@v4

      - name: Select environment
        id: envsel
        run: |
          if [[ "${GITHUB_REF_NAME}" == "main" ]]; then
            echo "PROJECT_ID=lottosmartpicker-prod" >> "$GITHUB_OUTPUT"
            echo "AR_REPO=app" >> "$GITHUB_OUTPUT"
            echo "CI_SA=${{ secrets.GCP_CI_SERVICE_ACCOUNT }}" >> "$GITHUB_OUTPUT"
            echo "WIF=${{ secrets.GCP_WORKLOAD_IDP }}" >> "$GITHUB_OUTPUT"
            echo "SERVICE=lottosmartpicker-app" >> "$GITHUB_OUTPUT"
            echo "SUF=" >> "$GITHUB_OUTPUT"
            echo "DATA_BASE=https://storage.googleapis.com/lottosmartpicker-data" >> "$GITHUB_OUTPUT"
          else
            echo "PROJECT_ID=lottosmartpicker-staging" >> "$GITHUB_OUTPUT"
            echo "AR_REPO=app" >> "$GITHUB_OUTPUT"
            echo "CI_SA=${{ secrets.GCP_CI_SERVICE_ACCOUNT_STG }}" >> "$GITHUB_OUTPUT"
            echo "WIF=${{ secrets.GCP_WORKLOAD_IDP_STG }}" >> "$GITHUB_OUTPUT"
            echo "SERVICE=lottosmartpicker-app-stg" >> "$GITHUB_OUTPUT"
            echo "SUF=-stg" >> "$GITHUB_OUTPUT"
            echo "DATA_BASE=https://storage.googleapis.com/lottosmartpicker-data-stg" >> "$GITHUB_OUTPUT"
          fi

      - id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ steps.envsel.outputs.WIF }}
          service_account: ${{ steps.envsel.outputs.CI_SA }}

      - uses: google-github-actions/setup-gcloud@v2

      - name: Build & push
        run: |
            gcloud config set project "${{ steps.envsel.outputs.PROJECT_ID }}"
            # Choose the right bucket per env:
            if [[ "${{ steps.envsel.outputs.PROJECT_ID }}" == "lottosmartpicker-staging" ]]; then
            SRC_BKT="lsp-source-staging-stg"
            else
            SRC_BKT="lsp-source-staging-prod"
            fi

            gcloud builds submit \
            --gcs-source-staging-dir="gs://$SRC_BKT/source" \
            --gcs-log-dir="gs://$SRC_BKT/logs" \
            --tag "$REGION-docker.pkg.dev/${{ steps.envsel.outputs.PROJECT_ID }}/${{ steps.envsel.outputs.AR_REPO }}/lottosmartpicker"

      - name: Deploy Cloud Run
        run: |
          gcloud run deploy "${{ steps.envsel.outputs.SERVICE }}" \
            --image "$REGION-docker.pkg.dev/${{ steps.envsel.outputs.PROJECT_ID }}/${{ steps.envsel.outputs.AR_REPO }}/lottosmartpicker" \
            --region "$REGION" --platform managed --allow-unauthenticated \
            --min-instances 0 --max-instances 50 --concurrency 80 \
            --cpu 1 --memory 512Mi \
            --service-account "lsp-run${{ steps.envsel.outputs.SUF }}@${{ steps.envsel.outputs.PROJECT_ID }}.iam.gserviceaccount.com" \
            --set-env-vars "GA_SCRATCHERS_INDEX_URL=${{ steps.envsel.outputs.DATA_BASE }}/ga/scratchers/index.json" \
            --set-env-vars "LOTTO_REMOTE_CSV_URL_POWERBALL=${{ steps.envsel.outputs.DATA_BASE }}/multi/powerball.csv" \
            --set-env-vars "LOTTO_REMOTE_CSV_URL_MEGAMILLIONS=${{ steps.envsel.outputs.DATA_BASE }}/multi/megamillions.csv" \
            --set-env-vars "LOTTO_REMOTE_CSV_URL_GA_CASH4LIFE=${{ steps.envsel.outputs.DATA_BASE }}/ga/cash4life.csv" \
            --set-env-vars "LOTTO_REMOTE_CSV_URL_GA_FANTASY5=${{ steps.envsel.outputs.DATA_BASE }}/ga/fantasy5.csv"
